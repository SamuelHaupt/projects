{"version":3,"sources":["components/ExerciseTableItem.js","components/ExerciseTable.js","pages/HomePage.js","pages/CreateExercisePage.js","components/EditSelectUnit.js","pages/EditExercisePage.js","App.js","reportWebVitals.js","index.js"],"names":["ExerciseTableItem","exercise","onDelete","onEdit","name","reps","weight","unit","date","className","onClick","_id","ExerciseTable","exercises","map","index","HomePage","setExerciseToEdit","useState","setExercises","history","useHistory","a","fetch","method","response","status","filter","console","error","loadExercises","json","data","useEffect","push","to","CreateExercisePage","setName","setReps","setWeight","setUnit","setDate","createExercise","newExercise","body","JSON","stringify","headers","alert","Object","values","length","id","type","value","onChange","input","target","defaultValue","disabled","hidden","EditSelectUnit","EditExercisePage","exerciseToEdit","editExercise","editedExercise","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79e2cbb3.chunk.js","sourcesContent":["import React from 'react';\nimport { MdDeleteForever, MdEdit } from 'react-icons/md';\n\nfunction ExerciseTableItem({exercise, onDelete, onEdit}) {\n    return (\n        <tr>\n            <td>{exercise.name}</td>\n            <td>{exercise.reps}</td>\n            <td>{exercise.weight}</td>\n            <td>{exercise.unit}</td>\n            <td>{exercise.date}</td>\n            <td><MdEdit className='EditIcon' onClick={ () => onEdit(exercise)}/></td>\n            <td><MdDeleteForever className='DeleteIcon' onClick={ () => onDelete(exercise._id)} /></td>\n        </tr>\n    )\n}\n\nexport default ExerciseTableItem","import React from 'react';\nimport ExerciseTableItem from './ExerciseTableItem';\n\nfunction ExerciseTable({exercises, onDelete, onEdit}) {\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Reps</th>\n                    <th>Weight</th>\n                    <th>Unit</th>\n                    <th>Date</th>\n                    <th className='BlankColumn'></th>\n                    <th className='BlankColumn'></th>\n                </tr>\n            </thead>\n            <tbody>\n                {exercises.map((exercise, index) =>\n                    <ExerciseTableItem\n                        exercise={exercise}\n                        onDelete={onDelete}\n                        onEdit={onEdit}\n                        key={index} />)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default ExerciseTable","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport ExerciseTable from '../components/ExerciseTable';\n\nfunction HomePage({ setExerciseToEdit }) {\n    const [exercises, setExercises] = useState([]);\n    const history = useHistory();\n\n    const onDelete = async _id => {\n        const response = await fetch(`/exercises/${_id}`, { method: 'DELETE' });\n        if (response.status === 204) {\n            setExercises(exercises.filter(exercise => exercise._id !== _id));\n        } else {\n            console.error(`Failed to delete the exercise with _id = ${_id}. Status code ${response.status}.`)\n        }\n    };\t\n\n    const onEdit = exercise => {\n        setExerciseToEdit(exercise);\n        history.push('/edit-exercise');\n    };\n\n    const loadExercises = async () => {\n        const response = await fetch('/exercises');\n        const data = await response.json();\n        setExercises(data);\n    };\n\n    useEffect(() => {\n        loadExercises();\n    }, []);\n\n    return (\n        <>\n            <h2>Exercise Tracker App</h2>\n            <ExerciseTable exercises={exercises} onDelete={onDelete} onEdit={onEdit}></ExerciseTable>\n            <Link to='/create-exercise'>Add Exercise</Link>\n        </>\n    )\n}\n\nexport default HomePage","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction CreateExercisePage () {\n    const [name, setName] = useState('');\n    const [reps, setReps] = useState('');\n    const [weight, setWeight] = useState('');\n    const [unit, setUnit] = useState('');\n    const [date, setDate] = useState('');\n\n    const history = useHistory();\n\n    const createExercise = async () => {\n        const newExercise = {name, reps, weight, unit, date};\n        const response = await fetch('/exercises', {\n            method: 'POST',\n            body: JSON.stringify(newExercise),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        if (response.status === 201) {\n            alert('Successfully added the exercise.');\n            history.push('/');\n        } else {\n            if (Object.values(response.body).length < 5) {\n                alert('Field inputs are incorrect. Supply correct inputs to all fields.');\n            } else {\n                alert(`Failed to add exercise. Status code ${response.status}`);\n            }\n        }\n        \n    };\n\n    return (\n        <div>\n            <h1>Add Exercise</h1>\n            <table id='exercises'>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Reps</th>\n                        <th>Weight</th>\n                        <th>Unit</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr className='ModifyRow'>\n                        <td>\n                            <input\n                            type='text'\n                            value={name}\n                            onChange={input => setName(input.target.value)} />\n                        </td>\n                        <td>\n                            <input\n                            type='number'\n                            value={reps}\n                            onChange={input => setReps(input.target.value)} />\n                        </td>\n                        <td>\n                            <input\n                            type='Number'\n                            value={weight}\n                            onChange={input => setWeight(input.target.value)} />\n                        </td>\n                        <td>\n                            <select defaultValue={'blank'} onChange={input => setUnit(input.target.value)}>\n                                <option value='blank' disabled hidden>Select</option>\n                                <option value='lbs'>lbs</option>\n                                <option value='kgs'>kgs</option>\n                            </select>\n                        </td>\n                        <td>\n                            <input\n                            type='text'\n                            value={date}\n                            onChange={input => setDate(input.target.value)} />\n                        </td>\n                    </tr>\n                </tbody>\n            \n            </table>\n            <br />\n            <button\n                onClick={createExercise}\n            >Save</button>\n        </div>\n    )\n}\n\nexport default CreateExercisePage;","import React from 'react';\n\nfunction EditSelectUnit ({ unit, setUnit }) {\n    \n        return (\n            <>\n                <select defaultValue={unit} onChange={input => setUnit(input.target.value)}>\n                    <option value='lbs'>lbs</option>\n                    <option value='kgs'>kgs</option>\n                </select>\n            </>\n        );\n    \n}\n\n\n\n\n\n\nexport default EditSelectUnit\n\n\n\n\n\n\n\n\n// <label for='selectUnit'>Unit of Measurement</label>\n//             <select name='unit' id='selectUnit'>\n                \n//                 <option value='Lbs'>Lbs</option>\n//                 <option value='Kgs'>Kgs</option>\n//             </select>\n//                 type='text'\n//                 value={unit}\n//                 onChange={input => setUnit(input.target.value)} />\n\n//                 const defaultUnit = () => {\n//                     if (unit === 'Lbs') {\n//                         return {\n//                             `<option value='Lbs' selected>Lbs</option>`\n//                             `<option value='Kgs'>Kgs</option>`\n//                         };\n//                     } else {\n//                         return {\n//                             `<option value='Lbs'>Lbs</option>\n//                             <option value='Kgs' selected>Kgs</option>`\n//                         };\n//                     }\n//                 }","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EditSelectUnit from '../components/EditSelectUnit';\n\n\nfunction EditExercisePage ({ exerciseToEdit }) {\n    const [name, setName] = useState(exerciseToEdit.name);\n    const [reps, setReps] = useState(exerciseToEdit.reps);\n    const [weight, setWeight] = useState(exerciseToEdit.weight);\n    const [unit, setUnit] = useState(exerciseToEdit.unit);\n    const [date, setDate] = useState(exerciseToEdit.date);\n\n    const history = useHistory();\n\n    const editExercise = async () => {\n        const editedExercise = { name, reps, weight, unit, date };\n        const response = await fetch(`exercises/${exerciseToEdit._id}`, {\n            method: 'PUT',\n            body: JSON.stringify(editedExercise),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        if (response.status === 200) {\n            alert('Successfully edited the exercise.');\n            history.push('/');\n        } else {\n            alert(`Failed to edit exercise. Status code ${response.status}`);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Edit Exercise</h1>\n            <table id='exercises'>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Reps</th>\n                        <th>Weight</th>\n                        <th>Unit</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr className='ModifyRow'>\n                        <td><input\n                            type='text'\n                            value={name}\n                            onChange={input => setName(input.target.value)} />\n                        </td>\n                        <td><input\n                            type='number'\n                            value={reps}\n                            onChange={input => setReps(input.target.value)} />\n                        </td>\n                        <td><input\n                            type='Number'\n                            value={weight}\n                            onChange={input => setWeight(input.target.value)} />\n                        </td>\n                        <td>\n                            <EditSelectUnit unit={unit} setUnit={setUnit} />\n                        </td>\n                        <td><input\n                            type='text'\n                            value={date}\n                            onChange={input => setDate(input.target.value)} />\n                        </td>\n                    </tr>\n                </tbody>\n            \n            </table>\n            <br />\n            <button\n                onClick={editExercise}\n            >Save</button>\n        </div>\n    )\n}\n\n\n\n\nexport default EditExercisePage;","import './App.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport CreateExercisePage from './pages/CreateExercisePage';\nimport EditExercisePage from './pages/EditExercisePage';\n\nfunction App() {\n  const [exerciseToEdit, setExerciseToEdit] = useState();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"App-header\">\n          <Route path='/' exact>\n            <HomePage setExerciseToEdit={setExerciseToEdit}/>\n          </Route>\n          <Route path='/create-exercise'>\n            <CreateExercisePage />\n          </Route>\n          <Route path='/edit-exercise'>\n            <EditExercisePage exerciseToEdit={exerciseToEdit}/>\n          </Route>\n        </header>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}